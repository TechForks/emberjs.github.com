<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2014-02-12T00:00:00Z</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember 1.4.0 and 1.5 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html"/>
    <id>http://emberjs.com/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html</id>
    <published>2014-02-12T00:00:00Z</published>
    <updated>2014-02-12T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.4.0 and the first beta in the 1.5 series
have just been released. This comes as the fourth cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class="anchorable-toc" id="toc_new-features-in-1-4"&gt;New features in 1.4&lt;/h3&gt;&lt;h4 class="anchorable-toc" id="toc_property-brace-expansion"&gt;Property Brace...&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.4.0 and the first beta in the 1.5 series
have just been released. This comes as the fourth cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_new-features-in-1-4'&gt;New features in 1.4&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_property-brace-expansion'&gt;Property Brace Expansion&lt;/h4&gt;
&lt;p&gt;In prior versions of Ember if you wanted to observe both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; on &lt;code&gt;baz&lt;/code&gt;
you would need to setup both &lt;code&gt;baz.foo&lt;/code&gt; and &lt;code&gt;baz.bar&lt;/code&gt; as dependent keys.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; obj = Ember.Object.extend({
  &lt;span class="key"&gt;baz&lt;/span&gt;: {&lt;span class="key"&gt;foo&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAMMO&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;bar&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAZORZ&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;},

  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the new property brace expansion, you could setup the computed properties dependencies
instead like:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.{foo,bar}&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This allows much less duplication/redundancy when your dependent keys are mostly similar.&lt;/p&gt;

&lt;p&gt;See the original PR &lt;a href="https://github.com/emberjs/ember.js/pull/3538"&gt;#3538&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-run-bind'&gt;Ember.run.bind&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ember.run.bind&lt;/code&gt; provides a useful utility when integrating with non-Ember libraries
that provide asynchronous callbacks.&lt;/p&gt;

&lt;p&gt;Ember utilizes a run-loop to batch and coalesce changes. This works by
marking the start and end of Ember-related JavaScript execution.&lt;/p&gt;

&lt;p&gt;When using events such as a View&amp;#39;s click handler, Ember wraps the event
handler in a run-loop, but when integrating with non-Ember libraries this
can be tedious.&lt;/p&gt;

&lt;p&gt;For example, the following is rather verbose but is the correct way to combine
third-party events and Ember code.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; that = &lt;span class="local-variable"&gt;this&lt;/span&gt;;
jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="keyword"&gt;function&lt;/span&gt;(){
  Ember.run(&lt;span class="keyword"&gt;function&lt;/span&gt;(){
    that.handleResize();
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To reduce the boilerplate, the following can be used to construct a
run-loop-wrapped callback handler.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, Ember.run.bind(&lt;span class="local-variable"&gt;this&lt;/span&gt;, &lt;span class="local-variable"&gt;this&lt;/span&gt;.handleResize));
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more details please reference the recently added &lt;a href="/guides/understanding-ember/run-loop/"&gt;run-loop guide&lt;/a&gt;
(much thanks to &lt;a href="https://github.com/bfbriggs"&gt;Brendan Briggs&lt;/a&gt;).&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_with-controller'&gt;With Controller&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{with}}&lt;/code&gt; helper can now accept a &lt;code&gt;controller&lt;/code&gt; option. Adding &lt;code&gt;controller=&amp;#39;something&amp;#39;&lt;/code&gt;
instructs the &lt;code&gt;{{with}}&lt;/code&gt; helper to create and use an instance of the specified controller
with the new context as its content.&lt;/p&gt;

&lt;p&gt;This is very similar to using the &lt;code&gt;itemController&lt;/code&gt; option with the &lt;code&gt;{{each}}&lt;/code&gt; helper.&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt; &lt;span class="attribute-name"&gt;users.posts&lt;/span&gt; &lt;span class="attribute-name"&gt;controller&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;userBlogPosts&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  &lt;span class="comment"&gt;{{!- The current context is wrapped in our controller instance }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the above example, the template provided to the &lt;code&gt;{{with}}&lt;/code&gt; block is now wrapped in the
&lt;code&gt;userBlogPost&lt;/code&gt; controller, which provides a very elegant way to decorate the context with custom
functions/properties.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_lazily-bound-attributes'&gt;Lazily Bound Attributes&lt;/h4&gt;
&lt;p&gt;Previously, every attribute that was bound added some degree of cost (mostly associated with maintaining
the bindings/observers themselves). This lead us to limit the list of attributes that were automatically
bound for &lt;code&gt;Ember.TextField&lt;/code&gt;, &lt;code&gt;Ember.TextArea&lt;/code&gt;, and friends. This is a common source of frustration as
more and more people want to bind to HTML5 attributes, but find that to do so they must reopen the
&lt;code&gt;Ember.TextField&lt;/code&gt; class and add the attributes they need.&lt;/p&gt;

&lt;p&gt;This might look like:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.TextField.reopen({
  &lt;span class="key"&gt;attributeBindings&lt;/span&gt;: [&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;autofocus&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;]
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then from the template:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;input&lt;/span&gt; &lt;span class="attribute-name"&gt;autofocus&lt;/span&gt;=&lt;span class="attribute-value"&gt;omgAutofocusMe&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This certainly is not ideal, and causes many issues for people that expect it to &amp;quot;just work&amp;quot;.&lt;/p&gt;

&lt;p&gt;Thankfully, this has gotten MUCH better with the 1.4 release. In 1.4 any attribute bindings that do not
exist at the time the view is first rendered will not have observers setup (therefore removing the original
performance concern), but if/when the attribute is set on the view later (after the first render) an observer
is setup at that time.&lt;/p&gt;

&lt;p&gt;This means that we are only creating observers for actual properties that are present, but we can list every
valid HTML attribute in the &lt;code&gt;attributeBindings&lt;/code&gt; property so that you can simply use them without having to reopen
internal classes.&lt;/p&gt;

&lt;p&gt;As of Ember 1.4 you should be able to use any HTML5 attribute with &lt;code&gt;{{input type=&amp;quot;text&amp;quot;}}&lt;/code&gt;, &lt;code&gt;{{textarea}}&lt;/code&gt;, and
&lt;code&gt;{{checkbox}}&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-improvements'&gt;Other Improvements&lt;/h4&gt;
&lt;p&gt;As usual, there are a ton of bug fixes and small improvements in this
release. You can see a list of all the changes in the CHANGELOG:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.4.0/CHANGELOG.md"&gt;Ember.js 1.4.0 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.5.0-beta.1/CHANGELOG.md"&gt;Ember.js 1.5.0-beta.1 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/01/27</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-27.html"/>
    <id>http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-27.html</id>
    <published>2014-02-08T00:00:00Z</published>
    <updated>2014-02-08T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;

&lt;p&gt;This week&amp;#39;s core team meeting was rescheduled from Friday, January 24 to Monday, January 27
due to the Google outage that affected Google Hangouts.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @trek, @wagenet, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_issues-discussion'&gt;Issues Discussion:&lt;/h4&gt;
&lt;p&gt;The core team discussed the following Github Issues&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-auto-location&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3725"&gt;#3725&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;resolution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assign @stefanpenner&lt;/li&gt;
&lt;li&gt;should be good for the next beta.&lt;/li&gt;
&lt;li&gt;needs someone to audit + try for real&lt;/li&gt;
&lt;li&gt;is it ok if we have /#/foo and /foo  in the wild? How does this affect SEO&lt;/li&gt;
&lt;li&gt;document that backend support is needed and that your app will not have 
canonical URLs (i.e. every URL will have two versions in the wild: &lt;code&gt;/#/foo&lt;/code&gt; and &lt;code&gt;/foo&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bound Action Lookup &lt;a href="https://github.com/emberjs/ember.js/pull/3936"&gt;#3936&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We added default fall back to allow a static string action name if a property isn&amp;#39;t found,
but it is possible that this will break things if you have a property AND an action named
the same thing. This could be enabled similar to the &lt;code&gt;ember-routing-drop-deprecated-action-style&lt;/code&gt;
feature which will need to have a &lt;code&gt;null&lt;/code&gt; value in &lt;code&gt;features.json&lt;/code&gt; (which will allow folks to 
opt-in via &lt;code&gt;EmberENV&lt;/code&gt;) until 2.0 if we are concerned with the SemVer implications.&lt;/p&gt;

&lt;p&gt;resolution: Ensure docs are updated so unquoted style is not used before shipping.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-views-bindable-attributes&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4170"&gt;#4170&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We like the idea generally but there are doubts having a a separate API, we should explore pushing it into a single API. Differences between this and &lt;code&gt;attributeBindings&lt;/code&gt; are too subtle, we should not fragment&lt;/p&gt;

&lt;p&gt;This has been converted to a Mixin that is only used for &lt;code&gt;Ember.TextField&lt;/code&gt; and &lt;code&gt;Ember.TextArea&lt;/code&gt; currently. It allows for us to use all HTML5 attributes, but only actually setup observers/bindings for the ones that are present at the first render. This has a significant developer happiness impact, and we hope that we can get comfortable with it enough to enable in 1.5 beta series.&lt;/p&gt;

&lt;p&gt;resolution: @ebryn will talk to Robert&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replace &lt;code&gt;module&lt;/code&gt; with &lt;em&gt;something&lt;/em&gt; else. &lt;a href="https://github.com/emberjs/ember.js/pull/3838"&gt;#3838&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is due to an issue under Node (since &lt;code&gt;module&lt;/code&gt; is a reserved word). It ultimately doesn&amp;#39;t matter what we decide on, but if we want the test suite to run under Node (for &lt;code&gt;ember-runtime&lt;/code&gt; and &lt;code&gt;ember-metal&lt;/code&gt; specifically, but also possibly &lt;code&gt;ember-data&lt;/code&gt;) we need to use something that isn&amp;#39;t a keyword.&lt;/p&gt;

&lt;p&gt;resolution: QUnit.module, but check for prior art. (@stefanpenner)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update Backburner (and Docs). &lt;a href="https://github.com/emberjs/ember.js/pull/4120"&gt;#4120&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contains potentially breaking change to &lt;code&gt;throttle&lt;/code&gt; to default to running immediately (from &lt;a href="https://github.com/ebryn/backburner.js/pull/55"&gt;ebryn/backburner.js#55&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;resolution: it was a bug, breaking it is fine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/issues/3256"&gt;https://github.com/emberjs/ember.js/issues/3256&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: bindingPaths to globals should be canned, so we won&amp;#39;t support additional features built on
on this behavior.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/01/31</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-31.html"/>
    <id>http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-31.html</id>
    <published>2014-02-08T00:00:00Z</published>
    <updated>2014-02-08T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @wifelette, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_go-no-go-feature-listing'&gt;Go/No-Go Feature Listing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;
  @krisselden: likes the feature a lot (we should “just doit”)
  @wycats: naming with globals is totally unsolvable.
  @machty: If FooLoading is ambiguous, we should just warn that global mode is not supported for this feature
  @tomdale: we need a separate task force for thinking about module mode only features.&lt;/p&gt;

&lt;p&gt;resolution: Tom and Stef will review&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-caps-lookup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;#3218&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: check local first, warn and fallback to global seems like a good strategy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: Tom and Stef will review&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;version api docs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Often asked for. We should work with community, see if robert can own, and help delegate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;misleading bug reports, but eager loader of controllers was the original pain point that kept
this a &amp;quot;No go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;composable-computed-properties&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;#3696&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@wycats: aliased to short words in the examples, should be documented to match this?
@ebryn:: new CP work may have issues, @wycats and @ebryn and David should talk.&lt;/p&gt;

&lt;p&gt;resolution: @ebryn will talk to David about blocking&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-auto-location&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3725"&gt;#3725&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: Alex will make sure docs are good, then this becomes a &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-bound-action-name&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3936"&gt;#3936&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot; but we need an intermediate release issuing deprecation warnings, a future release will have break. This future release may contain some helpful warning, and the release notes will contain this info.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class='anchorable-toc' id='toc_pr-s-issues-to-review'&gt;PR&amp;#39;s/Issues To Review&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4251"&gt;FEATURE ember-routing-consistent-resources&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adds &lt;code&gt;.index&lt;/code&gt;, &lt;code&gt;.loading&lt;/code&gt;, and &lt;code&gt;.error&lt;/code&gt; sub-routes for resources created even if no callback was provided.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt; App.Router.map(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
   &lt;span class="local-variable"&gt;this&lt;/span&gt;.resource(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;home&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
 });
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Prior to this feature &lt;code&gt;home.index&lt;/code&gt; route would not be created for the above resource.
It is possible that the current situation was intentional.&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;No go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4246"&gt;FEATURE ember-routing-inherits-parent-model&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.Router.map(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
  &lt;span class="local-variable"&gt;this&lt;/span&gt;.resource(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;thing&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="key"&gt;path&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;/thing/:thing_id&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.route(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;edit&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you wanted the Edit route&amp;#39;s model to be the Thing loaded in the Thing route, you have to define a model hook on the Edit route to call this.modelFor(&amp;#39;thing&amp;#39;), which is pretty repetitive and cumbersome.&lt;/p&gt;

&lt;p&gt;For this.route() routes that don&amp;#39;t specify a model hook, the model for that route should default to the parent resource&amp;#39;s model.&lt;/p&gt;

&lt;p&gt;This should be totally backwards compatible unless someone is doing something extremely strange.&lt;/p&gt;

&lt;p&gt;resolution: make this work only for routes, not resources for now. The interim solution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3689"&gt;FEATURE ember-document-title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Examples from @machty:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3299"&gt;Single static title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3302"&gt;Basic example of titleToken + title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3300"&gt;Basic example of titleToken + title (reversed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3303"&gt;titleToken bound to controller/model properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3304"&gt;Overriding doc.title format in deeper routes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: pause, until @wycats and @tomdale can review tokens behavior. Its getting close and we want this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3935"&gt;Convert Checkbox and Select to Components.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;No go&amp;quot;, this is a breaking change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3838"&gt;Use &lt;code&gt;QUnit.module&lt;/code&gt; instead of &lt;code&gt;module&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s just confirm what to use as a prefix. Is &lt;code&gt;QUnit.module&lt;/code&gt; OK, or should we create our own
(perhaps &lt;code&gt;EmberDev.module&lt;/code&gt; or something)?&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/02/07</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-02-07.html"/>
    <id>http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-02-07.html</id>
    <published>2014-02-08T00:00:00Z</published>
    <updated>2014-02-08T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @trek, @wagenet, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_features-pending-go-decision'&gt;Features pending &amp;#39;Go&amp;#39; decision.&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for inclusion in the 1.5.x beta series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tom and Stef still need to discuss how to handle module mode + new semantics next week.&lt;/p&gt;

&lt;p&gt;Resolution: Tom and Stef will discuss this week. No, for real this time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-caps-lookup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;#3218&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Needs follow up from &lt;a href="https://github.com/xtian"&gt;@xtian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Resolution: Ping @xtian&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tom and Stef still need to review.&lt;/p&gt;

&lt;p&gt;Resolution: Tom and Stef will review.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are still some decisions around &lt;a href="https://code.stypi.com/stefanpenner/lazy-loading"&gt;lazy loading code&lt;/a&gt;
and query params.&lt;/p&gt;

&lt;p&gt;resolution: Alex and Stef will discuss lazy stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;composable-computed-properties&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;#3696&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution:  stefan will work with David monday or tuesday to get this in. A &amp;quot;Go&amp;quot; then.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-inherits-parent-model&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4246"&gt;#4246&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;, already in beta&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-log-primitives&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4252"&gt;#4252&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-document-title&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3689"&gt;#3689&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Examples from @machty of current behavior:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3299"&gt;Single static title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3302"&gt;Basic example of titleToken + title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3300"&gt;Basic example of titleToken + title (reversed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3303"&gt;titleToken bound to controller/model properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3304"&gt;Overriding doc.title format in deeper routes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: Still &amp;quot;No go&amp;quot;, tokenization needs some polish related to nested resources&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_features-currently-slated-for-1-5-0-beta-series'&gt;Features currently slated for 1.5.0 beta series&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for already enabled in canary builds for inclusion in the 1.5.x beta series. All still have a &amp;quot;Go&amp;quot; vote.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ember-testing-routing-helpers&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3711"&gt;#3711&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-testing-triggerEvent-helper&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3792"&gt;#3792&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;computed-read-only&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3879"&gt;#3879&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-metal-is-blank&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4049"&gt;#4049&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-eager-url-update&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4122"&gt;#4122&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-routing-auto-location&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3725"&gt;#3725&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-routing-bound-action-name&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3936"&gt;#3936&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_feature-process'&gt;Feature Process&lt;/h4&gt;
&lt;p&gt;We reviewed the a proposed change to the process for adding features. This isn&amp;#39;t a major departure, just an iteration
on what we are currently doing:&lt;/p&gt;

&lt;p&gt;Process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feature is submitted via PR.

&lt;ul&gt;
&lt;li&gt;Confirm &lt;code&gt;features.json&lt;/code&gt; and &lt;code&gt;FEATURES.md&lt;/code&gt; have entries.&lt;/li&gt;
&lt;li&gt;That PR is reviewed, and generally confirmed to be a solid idea&lt;/li&gt;
&lt;li&gt;PR is merged so makes it into a canary build&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Feature is added to &lt;a href="https://github.com/emberjs/ember.js/issues/4052"&gt;Features Pending &amp;#39;Go&amp;#39; Decision&lt;/a&gt; Issue&lt;/li&gt;
&lt;li&gt;New Issue is created with a check-list of items to be completed prior to receiving a &amp;#39;Go&amp;#39; vote. 
This should include at least the following entries:

&lt;ul&gt;
&lt;li&gt;Security Audit&lt;/li&gt;
&lt;li&gt;Core Team Sign-off&lt;/li&gt;
&lt;li&gt;Should be given a special tag (to make it easy to find later)&lt;/li&gt;
&lt;li&gt;Should be assigned to the original feature contributor&lt;/li&gt;
&lt;li&gt;This can serve as the proper place to ask for changes/fixes to the feature&lt;/li&gt;
&lt;li&gt;Once the feature has gotten a &amp;#39;Go&amp;#39; decision&lt;/li&gt;
&lt;li&gt;The issue is closed.&lt;/li&gt;
&lt;li&gt;It is added to &lt;code&gt;features.json&lt;/code&gt; with a value of &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot; and CONTRIBUTOR.md should be update accordingly.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_security-process'&gt;Security Process&lt;/h4&gt;
&lt;p&gt;Currently we do security releases all the way back to 1.0.x. At some point that will be untenable (not yet though).
There was some discussions about Long Term Support release structures: every odd/even becomes LTS, or even 5th release, or we only support previous three revisions (which would be all releases in the last 4.5 months with our current release model).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Security Releases - Ember 1.2.2, and 1.3.2</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/07/ember-security-releases.html"/>
    <id>http://emberjs.com/blog/2014/02/07/ember-security-releases.html</id>
    <published>2014-02-07T00:00:00Z</published>
    <updated>2014-02-07T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Because developers trust Ember.js to handle sensitive customer data in
production, we take the security of the project extremely seriously.  In
fact, we're one of the few JavaScript projects that has a &lt;a href="http://emberjs.com/security/"&gt;clearly
outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic...&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Because developers trust Ember.js to handle sensitive customer data in
production, we take the security of the project extremely seriously.  In
fact, we&amp;#39;re one of the few JavaScript projects that has a &lt;a href="http://emberjs.com/security/"&gt;clearly
outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic mailing list exclusively for security
announcements&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Today we are announcing the release of Ember.js 1.2.2,
1.3.2, and 1.4.0-beta.6 that contain an important security fix:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.4.0-beta.6 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.4.0-beta.5...v1.4.0-beta.6"&gt;Compare View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.3.1...v1.3.2"&gt;Compare View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.2 -- &lt;a href="https://github.com/emberjs/ember.js/compare/v1.2.1...v1.2.2"&gt;Compare View&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These releases contain the fix for an XSS vulnerability that
you can learn more about on our security mailing list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/1h6FRgr8lXQ"&gt;CVE-2014-0046&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is recommended that you update immediately. In order to ease
upgrading, the only major change in each release is the security fix
(other than 1.4.0-beta.6, which is a normal beta channel release with
the fix rolled in).&lt;/p&gt;

&lt;p&gt;We would like to thank Hyder Ali of &lt;a href="https://www.zoho.com"&gt;Zoho&lt;/a&gt;
for responsibly disclosing and working with us on the patch
and the advisory.&lt;/p&gt;

&lt;p&gt;If you discover what you believe may be a security issue in Ember.js, we
ask that you follow our &lt;a href="http://emberjs.com/security/"&gt;responsible disclosure
policy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are using Ember.js in production, please consider subscribing to
our &lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;security announcements mailing
list&lt;/a&gt;.  It is
extremely low-traffic and only contains announcements such as these.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_additional-reading'&gt;Additional Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js Security Policy Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/security/"&gt;Ember.js Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js Security Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/01/17</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/01/19/core-team-meeting-minutes-2014-01-17.html"/>
    <id>http://emberjs.com/blog/2014/01/19/core-team-meeting-minutes-2014-01-17.html</id>
    <published>2014-01-19T00:00:00Z</published>
    <updated>2014-01-19T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @trek, @wagenet, @wycats, @wifelette&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_pending-go-no-go'&gt;Pending Go/No-Go&lt;/h3&gt;
&lt;p&gt;We received feedback that too many flagged features in canary were
not getting enough discussion from the core team early in the release cycle.&lt;/p&gt;

&lt;p&gt;This was delaying useful features making it into scheduled beta releases.&lt;/p&gt;

&lt;p&gt;To tighten up the feedback loop, the core team will regularly
review features on our canary builds and work with authors sooner to address concerns.&lt;/p&gt;

&lt;p&gt;The current list of features on master but not enabled in the 1.4 family of beta builds
can be found on this Github issue: 
&lt;a href="https://github.com/emberjs/ember.js/issues/4052"&gt;https://github.com/emberjs/ember.js/issues/4052&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following features look good in their current incarnation and will likely receive a &amp;quot;go&amp;quot;
vote:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3711"&gt;ember-testing-routing-helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3879"&gt;computed-read-only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4049"&gt;ember-metal-is-blank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4122"&gt;ember-eager-url-update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-3224-string-humanize-a-and-a-href-https-github-com-emberjs-ember-js-pull-3953-string-parameterize-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3224"&gt;string-humanize&lt;/a&gt; and &lt;a href="https://github.com/emberjs/ember.js/pull/3953"&gt;string-parameterize&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;There is a concern that this increases the surface area of API and the size of the framework
without providing enough benefit that is unique to Ember.js. If the package manager ecosystem
for browser JavaScript were more mature, these would clear cases for community contribution.
String inflection is notoriously hard to get correct, especially with internationalization,
and the common case is already handled by existing libraries. 
@trek &lt;a href="https://github.com/trek/fleck"&gt;even maintains one&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Revert.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-3218-ember-handlebars-caps-lookup-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;ember-handlebars-caps-lookup&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A bare capitalized word in Handlebars should look up on current scope.
&lt;code&gt;{{CONSTANT}}&lt;/code&gt; and &lt;code&gt;{{#each CONSTANT}}&lt;/code&gt; did global lookup mostly by side effect, 
this was not intended API, but we need to think through backwards compatibility
issues for people who used this as part of their app design.&lt;/p&gt;

&lt;p&gt;Some proposed ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;try local lookup first&lt;/li&gt;
&lt;li&gt;try global lookup and issue a deprecation warning (&amp;quot;will be removed in 2.0&amp;quot;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resolutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Revert.&lt;/li&gt;
&lt;li&gt;@wycats will talk to the author about a revert and our preferred way forward for this
behavior&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-3792-ember-testing-triggerevent-helper-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3792"&gt;ember-testing-triggerEvent-helper&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Looks good but needs some revision:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Needs mechanism for customizing event with additional data (i.e. which key is being pressed)&lt;/li&gt;
&lt;li&gt;Possibly have &lt;code&gt;keyEvent&lt;/code&gt; event helper use &lt;code&gt;triggerEvent&lt;/code&gt; internally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resolutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@ebryn will provide feedback on the PR&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-3696-composable-computed-properties-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;composable-computed-properties&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Possibly still needs some work (there some unhandled todos)? Will be a &amp;quot;go&amp;quot; when
these are addressed.&lt;/p&gt;

&lt;p&gt;Resolutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@trek will ask about the status of remaining todos&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-4008-query-params-new-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;query-params-new&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;@wycats and @machty chatted about some last minute issues. This PR should be good soon.
The removal of query prefixing should provide a nicer query string  (the &lt;code&gt;[]&lt;/code&gt; prefixing only
happens if two controllers in same hierarchy have the same parameter name).&lt;/p&gt;

&lt;p&gt;Resolutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@machty will keep chugging along&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_a-href-https-github-com-emberjs-ember-js-pull-3655-ember-routing-loading-error-substates-a'&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;ember-routing-loading-error-substates&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Currently &lt;code&gt;state/loading&lt;/code&gt; and &lt;code&gt;state_loading&lt;/code&gt; both reify into StateLoading under the current
resolver. Custom resolvers (like those in EmberAppKit) don&amp;#39;t have this issue, but the global
resolver does. We can&amp;#39;t make this work until modularization is done.&lt;/p&gt;
</content>
  </entry>
</feed>
