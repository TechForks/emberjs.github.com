<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2013-08-14T00:00:00Z</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember 1.0 RC7 Released</title>
    <link rel="alternate" href="/blog/2013/08/14/ember-1-0-rc7.html"/>
    <id>/blog/2013/08/14/ember-1-0-rc7.html</id>
    <published>2013-08-14T00:00:00Z</published>
    <updated>2013-08-14T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;We’re pleased to announce the release of Ember 1.0 RC7 today! If all goes smoothly, this will be our penultimate RC before Ember 1.0.  This release includes a number of bug fixes and a few small improvements. We’ve got a few other bug fixes in the...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We’re pleased to announce the release of Ember 1.0 RC7 today! If all goes smoothly, this will be our penultimate RC before Ember 1.0.  This release includes a number of bug fixes and a few small improvements. We’ve got a few other bug fixes in the queue that weren’t quite ready but this release was overdue and we didn’t want to wait. To that end, we expect to release RC8 next week. Read on for more details on what we changed.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_important-changes'&gt;Important Changes&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_code-route-controllerfor-code-no-longer-auto-generates-controllers'&gt;&lt;code&gt;Route#controllerFor&lt;/code&gt; no longer auto generates controllers&lt;/h4&gt;
&lt;p&gt;In some cases, people have been relying on &lt;code&gt;controllerFor&lt;/code&gt; to access controllers for routes that have not yet been entered, relying on its auto-generation ability. Unfortunately, this can actually lead to subtle bugs. When entering a route, Ember looks for a controller with a matching name. If that controller isn’t found, Ember generates one according to the type of the route’s model. If the model is an array, we generate an &lt;code&gt;ArrayController&lt;/code&gt;; if it’s an object, an &lt;code&gt;ObjectController&lt;/code&gt;; if neither, a standard &lt;code&gt;Controller&lt;/code&gt;. In most cases, people using &lt;code&gt;controllerFor&lt;/code&gt; outside of the route are not providing a model and Ember will create the basic &lt;code&gt;Controller&lt;/code&gt;. If the route is later entered, the controller will not be re-created and the type of the controller may not match the provided model.&lt;/p&gt;

&lt;p&gt;Due to this, we removed the auto-generation abilities of &lt;code&gt;controllerFor&lt;/code&gt;. In most applications, this will not be an issue, but if you were relying on this behaviors, you will need to update your application. If you do have a controller that’s not associated with a route, you can use the new &lt;code&gt;Route#generateController&lt;/code&gt; method to generate it before using &lt;code&gt;controllerFor&lt;/code&gt; for subsequent access.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_removed-code-old-router-code'&gt;Removed &lt;code&gt;old-router&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Ember’s old router was deprecated prior to the first RC and while it’s never been included in standard RC builds, some users have still been relying on it. Despite this, it’s become time to cut the ties. Increasingly, new features we are adding, especially containers, are incompatible with the old router. Because of this, we’ve removed the old router code from Ember’s repo and you are no longer able to make custom Ember builds with it. We strongly encourage everyone still using the old router to upgrade. However, if anyone is interested in maintaining an old router library independent of the main Ember repo, please let us know.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_other-changes'&gt;Other changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Update Handlebars version to 1.0.0&lt;/strong&gt; — Handlebars 1.0.0 was released almost simultaneously with RC6. Unfortunately, we hadn’t upgraded Ember to support it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mergedProperties&lt;/code&gt; — Similar to &lt;code&gt;concatenatedProperties&lt;/code&gt; but for objects. It merges the properties of the two basic objects into a single object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deprecate &lt;code&gt;template&lt;/code&gt; in favor of &lt;code&gt;partial&lt;/code&gt;&lt;/strong&gt; — There was a lot of overlap between these two methods. We’ve solidified around &lt;code&gt;partial&lt;/code&gt; and no longer require an underscore-prefixed name.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Update Backburner.js (Ember’s RunLoop) - fixes &lt;code&gt;debounce&lt;/code&gt; adds &lt;code&gt;throttle&lt;/code&gt;&lt;/strong&gt; — Previously, &lt;code&gt;Ember.run.debounce&lt;/code&gt; actually performed throttling. &lt;code&gt;debounce&lt;/code&gt; now actually performs a debounce and the thottling behavior has been moved to &lt;code&gt;Ember.run.throttle&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Routes can now specify their controller class name with &lt;code&gt;controllerName&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;code&gt;Ember.Route#disconnectOutlet&lt;/code&gt;, to allow for clearing a previously rendered outlet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added functionality to Router.map to allow it to be called multiple times without the map being overwritten. Allows routes to be added at runtime.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC6.1, RC5.1, RC4.1, RC3.1, RC2.1 RC1.1 Released</title>
    <link rel="alternate" href="/blog/2013/07/25/ember-1-0-rc6-1-rc5-1-rc4-1-rc3-1-rc2-1-and-rc1-1-released.html"/>
    <id>/blog/2013/07/25/ember-1-0-rc6-1-rc5-1-rc4-1-rc3-1-rc2-1-and-rc1-1-released.html</id>
    <published>2013-07-25T00:00:00Z</published>
    <updated>2013-07-25T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Because many Ember.js apps allow users to interact with private data, we
take security issues very seriously.&lt;/p&gt;

&lt;p&gt;In fact, we're one of the few JavaScript projects that has a
&lt;a href="http://emberjs.com/security/"&gt;clearly outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic mailing list exclusively...&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Because many Ember.js apps allow users to interact with private data, we
take security issues very seriously.&lt;/p&gt;

&lt;p&gt;In fact, we&amp;#39;re one of the few JavaScript projects that has a
&lt;a href="http://emberjs.com/security/"&gt;clearly outlined security policy&lt;/a&gt; and a
&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;low-traffic mailing list exclusively for security
announcements&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We want developers to know that they can trust Ember enough to build
their businesses on top of it.&lt;/p&gt;

&lt;p&gt;In that spirit, today we are announcing the release of Ember.js 1.0
RC6.1, RC5.1, RC4.1, RC3.1, RC2.1 and RC1.1. These are all security
releases that address a potential XSS security issue you can learn more
about by following this link:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/ember-security/dokLVwwxAdM"&gt;CVE-2013-4170&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is recommended that you update immediately. In order to ease
upgrading, the only major change in each release is the security fix.&lt;/p&gt;

&lt;p&gt;We would like to thank Mario Heiderich of &lt;a href="https://cure53.de/"&gt;Cure53&lt;/a&gt;
for responsibly disclosing this issue, working with us on the patch
and the advisory, and having patience while we went through our
security procedure for the first time.&lt;/p&gt;

&lt;p&gt;Like a smoke detector or fire extinguisher, having a security procedure
is something that you hope that you don&amp;#39;t need; but when you need it,
you&amp;#39;re glad you have it.&lt;/p&gt;

&lt;p&gt;We hope that we can set an example for other projects in the JavaScript
world when it comes to taking security seriously. Initiatives like the
&lt;a href="https://nodesecurity.io/"&gt;Node Security Project&lt;/a&gt; are a step in the
right direction.&lt;/p&gt;

&lt;p&gt;We are very fortunate that this security issue is low severity. Due to
the sandboxed nature of the web browser, there are far fewer possible
exploit vectors for a JavaScript MVC framework to worry about than a
traditional server-side framework.&lt;/p&gt;

&lt;p&gt;That being said, we will remain vigilant in ensuring that even small
security issues are taken care of properly. If you discover what you
believe may be a security issue in Ember.js, we ask that you follow
our &lt;a href="http://emberjs.com/security/"&gt;responsible disclosure policy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, thanks to Yehuda Katz, Stefan Penner and Kris Selden, who
donated their valuable time to reviewing the patch, auditing other code
for similar vulnerabilities, and preparing the new releases.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC6</title>
    <link rel="alternate" href="/blog/2013/06/23/ember-1-0-rc6.html"/>
    <id>/blog/2013/06/23/ember-1-0-rc6.html</id>
    <published>2013-06-23T00:00:00Z</published>
    <updated>2013-06-23T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC6 has been released and is available from the
main website and at &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.  This
release features two big changes: 1) router update 2) Ember Components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Router Update&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The biggest change is router update (aka "router facelift...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC6 has been released and is available from the
main website and at &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.  This
release features two big changes: 1) router update 2) Ember Components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Router Update&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The biggest change is router update (aka &amp;quot;router facelift&amp;quot;), which addresses
two major issues. The first was inconsistent semantics between URL-based transitions
and &lt;code&gt;transitionTo&lt;/code&gt;. The second was spotty async support which made it difficult to
prevent or delay route entry in cases such as authentication and async code-loading.&lt;/p&gt;

&lt;p&gt;We have now harmonized URL changes and &lt;code&gt;transitionTo&lt;/code&gt; semantics and more fully embraced
asynchrony using promises.&lt;/p&gt;

&lt;p&gt;Additionally, router transitions have become first-class citizens and there are
new hooks to prevent or decorate transitions:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;willTransition&lt;/code&gt;: fires on current routes whenever a transition is about to take place
 &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt;: hooks fired during the async validation phase&lt;/p&gt;

&lt;p&gt;Finally there is an &lt;code&gt;error&lt;/code&gt; event which fires whenever there is a rejected promise or
error thrown in any of the &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt; hooks.&lt;/p&gt;

&lt;p&gt;For more on new router features, see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://machty.s3.amazonaws.com/ember-facelift-presentation/index.html#/1"&gt;New router overview given by Alex Matchneer&amp;#39;s at the June Ember NYC Meetup &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/machty/5647589"&gt;Usage Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.embercasts.com/episodes/client-side-authentication-part-2"&gt;Client-side Authentication Part 2 Embercast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Special thanks to Alex Matchneer for his work on this!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember Components&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other major change is the introduction of Ember Components, which shares Web
Components&amp;#39; goal of facilitating creation of reusable higher-level page elements.&lt;/p&gt;

&lt;p&gt;Ember Components will generally consist of a &lt;code&gt;template&lt;/code&gt; and a &lt;code&gt;view&lt;/code&gt; which encapsulate the &lt;code&gt;template&lt;/code&gt;&amp;#39;s
property access and actions.  Any reference to outside constructs is handled through context
info passed into the &lt;code&gt;view&lt;/code&gt;.  Components can be customized through subclassing.&lt;/p&gt;

&lt;p&gt;Ember Components naming conventions are: 1) the &lt;code&gt;template&lt;/code&gt;&amp;#39;s name begins with &amp;#39;components/&amp;#39;, and 2) the
Component&amp;#39;s name must include a &amp;#39;-&amp;#39; (this latter convention is consistent with Web Components standards,
and prevents name collisions with built-in controls that wrap HTML elements). As an example, a component
might be named &lt;code&gt;&amp;#39;radio-button&amp;#39;&lt;/code&gt;.  Its &lt;code&gt;template&lt;/code&gt; would be &lt;code&gt;&amp;#39;components/radio-button&amp;#39;&lt;/code&gt; and you would call
it as &lt;code&gt;{{radio-button}}&lt;/code&gt; in other &lt;code&gt;templates&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned for more docs and examples of this exciting new feature.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC5</title>
    <link rel="alternate" href="/blog/2013/06/01/ember-1-0-rc5.html"/>
    <id>/blog/2013/06/01/ember-1-0-rc5.html</id>
    <published>2013-06-01T00:00:00Z</published>
    <updated>2013-06-01T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 1.0 RC5 has just been released and is now available from the
main website as well as &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RC5 fixes several regressions and bugs found in RC4. Notably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A performance regression caused by a change to run loop scheduling has...&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 1.0 RC5 has just been released and is now available from the
main website as well as &lt;a href="http://builds.emberjs.com"&gt;builds.emberjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RC5 fixes several regressions and bugs found in RC4. Notably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A performance regression caused by a change to run loop scheduling has
been fixed. Thanks to &lt;a href="https://twitter.com/ebryn"&gt;Erik Bryn&lt;/a&gt; for
working on this.&lt;/li&gt;
&lt;li&gt;Promises returned from a route&amp;#39;s &lt;code&gt;model&lt;/code&gt; hook could cause the app to
hang on page refresh. This has been fixed thanks to &lt;a href="https://twitter.com/machty"&gt;Alex Matchneer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ember-testing&lt;/code&gt; package, which contains additional helpers for
testing Ember.js apps, is no longer included in the production build.
This means less JavaScript for end users to load over the network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you to everyone who filed issues and pull requests. Please try out
RC5 in your applications and report any issues or regressions you find
by filing an &lt;a href="https://github.com/emberjs/ember.js/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, thanks to &lt;a href="https://twitter.com/stefanpenner"&gt;Stefan Penner&lt;/a&gt;, who
has been busting his tail to get Ember.js to the 1.0 finish line,
including doing the release engineering for these release candidates.
Thanks Stef!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data 0.13</title>
    <link rel="alternate" href="/blog/2013/05/28/ember-data-0-13.html"/>
    <id>/blog/2013/05/28/ember-data-0-13.html</id>
    <published>2013-05-28T00:00:00Z</published>
    <updated>2013-05-28T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today, we are pleased to announce the release of Ember Data 0.13.&lt;/p&gt;

&lt;p&gt;Ember Data 0.13 is the first official release of Ember Data. This should
make it easier for people to synchronize Ember.js and Ember Data
versions, and make reasoning about the upgrade...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, we are pleased to announce the release of Ember Data 0.13.&lt;/p&gt;

&lt;p&gt;Ember Data 0.13 is the first official release of Ember Data. This should
make it easier for people to synchronize Ember.js and Ember Data
versions, and make reasoning about the upgrade process much easier.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-data-0-13'&gt;Ember Data 0.13&lt;/h3&gt;
&lt;p&gt;In the past few months, Ember Data has stabilized a lot. We still consider
it alpha, and recommend it for production use only to those who like to
live on the bleeding edge and contribute back to the project. To make life
easier for those folks, though, we will be cutting regular releases like we
do with Ember.js.&lt;/p&gt;

&lt;p&gt;A few of the many folks involved in the changes in this release include
Tom Dale, Yehuda Katz, Cyril Fluck, Igor Terzic, Stefan Penner, Paul Chavard,
Gordon Hempton, Peter Wagenet. Thank you to you all and everyone else who
has contributed code and others.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_api-revision-removal'&gt;API Revision Removal&lt;/h4&gt;
&lt;p&gt;Now that we are doing regular releases, the API revision check has been
removed. You no longer need to provide the API revision number when
defining your store:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.Store = DS.Store.extend({
  &lt;span class="comment"&gt;// Delete this!&lt;/span&gt;
  &lt;span class="key"&gt;revision&lt;/span&gt;: &lt;span class="integer"&gt;13&lt;/span&gt;
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h3 class='anchorable-toc' id='toc_ember-data-future-plans'&gt;Ember Data Future Plans&lt;/h3&gt;
&lt;p&gt;Our immediate goals for Ember Data are stabilization, bug fixes, and
documentation. There are only two major areas of improvement planned
before we beging promoting builds to prerelease and RC versions:&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_promises'&gt;Promises&lt;/h4&gt;
&lt;p&gt;Currently, most Ember Data APIs return objects that also implement a
&lt;code&gt;then()&lt;/code&gt; method, allowing them to be used interchangeably as either
models or promises.&lt;/p&gt;

&lt;p&gt;While this flexibility was convenient, it unfortunately caused confusing
semantics. Specifically, because a resolved promise stays resolved,
operations like reloading became very confusing.&lt;/p&gt;

&lt;p&gt;While not in this release, you should expect that future releases of
Ember Data will shift to an entirely promise-based API. This both
resolves the issues with confusing semantics as well as allows us to
implement some exciting features, like more powerful polymorphism.&lt;/p&gt;

&lt;p&gt;Thanks to Stefan Penner for leading the charge on this.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_error-handling'&gt;Error Handling&lt;/h4&gt;
&lt;p&gt;We want to make error handling and dealing with client and server
conflicts rock solid. A &lt;a href="https://github.com/emberjs/data/pull/958"&gt;pull request from Paul Chavard&lt;/a&gt;
is currently open and looks like a solid starting point for error
handling. You should see much more development on this in the near
future.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.0 RC4</title>
    <link rel="alternate" href="/blog/2013/05/28/ember-1-0-rc4.html"/>
    <id>/blog/2013/05/28/ember-1-0-rc4.html</id>
    <published>2013-05-28T00:00:00Z</published>
    <updated>2013-05-28T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;h4 class="anchorable-toc" id="toc_announcement"&gt;Announcement&lt;/h4&gt;
&lt;p&gt;We have &lt;a href="https://github.com/emberjs/ember.js/issues/2750"&gt;noticed&lt;/a&gt; a performance regression, a debug flag was left on by mistake. So if you really want the goodness of RC4 without this regression use &lt;a href="http://builds.emberjs.com/ember-bd1629e1f38888be881dbfdf29b779a0cdb4e85f.js"&gt;this build&lt;/a&gt;, we'll have an official release out soon.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, we are pleased to announce...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 class='anchorable-toc' id='toc_announcement'&gt;Announcement&lt;/h4&gt;
&lt;p&gt;We have &lt;a href="https://github.com/emberjs/ember.js/issues/2750"&gt;noticed&lt;/a&gt; a performance regression, a debug flag was left on by mistake. So if you really want the goodness of RC4 without this regression use &lt;a href="http://builds.emberjs.com/ember-bd1629e1f38888be881dbfdf29b779a0cdb4e85f.js"&gt;this build&lt;/a&gt;, we&amp;#39;ll have an official release out soon.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, we are pleased to announce Ember.js 1.0 RC4:&lt;/p&gt;

&lt;p&gt;This RC4 release of Ember puts us very close to the final 1.0 release.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-1-0-rc4'&gt;Ember.js 1.0 RC4&lt;/h3&gt;
&lt;p&gt;As we approach 1.0 final, our focus continues to be on bugfixes, performance, and
reliability.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_breaking-change-controller-model-setup'&gt;BREAKING CHANGE: Controller/Model Setup&lt;/h4&gt;
&lt;p&gt;One of the roles of &lt;code&gt;Route&lt;/code&gt; objects in an Ember application is to tell
controllers which model they should represent.&lt;/p&gt;

&lt;p&gt;By default, the object that you return from a route&amp;#39;s &lt;code&gt;model&lt;/code&gt; hook is
set as the &lt;code&gt;model&lt;/code&gt; property on the corresponding controller. So, for
example, if you have this route:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The array returned from &lt;code&gt;model&lt;/code&gt; would be set as the &lt;code&gt;model&lt;/code&gt; property of
the &lt;code&gt;App.PhotosController&lt;/code&gt;. This tells the controller that it should
present that model to its template.&lt;/p&gt;

&lt;p&gt;What if you need to set up additional controllers, beyond the primary
controller associated with that route? In that case, you can implement
the &lt;code&gt;setupController&lt;/code&gt; hook:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  },

  &lt;span class="function"&gt;setupController&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(controller, model) {
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.controllerFor(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;application&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;showingPhotos&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="predefined-constant"&gt;true&lt;/span&gt;);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is all well and good, but what if you wanted to &lt;strong&gt;prevent&lt;/strong&gt; a model
from being set on the &lt;code&gt;PhotosController&lt;/code&gt; at all?&lt;/p&gt;

&lt;p&gt;In RC3, &lt;em&gt;preventing this default behavior was impossible&lt;/em&gt;. In RC4,
&lt;strong&gt;implementing the &lt;code&gt;setupController&lt;/code&gt; hook prevents the default behavior
from happening. This is a potentially breaking change.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your route implements the &lt;code&gt;setupController&lt;/code&gt; hook &lt;em&gt;and&lt;/em&gt; you want to
preserve default behavior, &lt;strong&gt;make sure you call &lt;code&gt;_super()&lt;/code&gt; from within
the hook&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PhotosRoute = Ember.Route.extend({
  &lt;span class="function"&gt;model&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; App.Photo.find();
  },

  &lt;span class="function"&gt;setupController&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(controller, model) {
    &lt;span class="comment"&gt;// Call _super for default behavior&lt;/span&gt;
    &lt;span class="local-variable"&gt;this&lt;/span&gt;._super(controller, model);
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.controllerFor(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;application&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;showingPhotos&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="predefined-constant"&gt;true&lt;/span&gt;);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to Kris Selden and Luke Melia for pulling together PRs from
Paul Chavard, Rob Harper and input from others into a cohesive change.
We don&amp;#39;t take breaking changes lightly at this stage of the release
process, but this one is worthwhile.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_rsvp-2-0'&gt;RSVP 2.0&lt;/h4&gt;
&lt;p&gt;Ember now embeds version 2.0 of
&lt;a href="https://github.com/tildeio/rsvp.js"&gt;RSVP.js&lt;/a&gt;, a microlibrary for
&lt;a href="http://promises-aplus.github.io/promises-spec/"&gt;Promises/A+ compatible
promises&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of the Ember.js APIs that return promises use this library to
ensure compatible behavior.&lt;/p&gt;

&lt;p&gt;A big, big thanks to Stefan Penner for all of his work on improving the
promises story across both Ember and Ember Data.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_run-loop-extracted-to-backburner-js'&gt;Run Loop Extracted to Backburner.js&lt;/h4&gt;
&lt;p&gt;Erik Bryn has extracted the run loop into the
&lt;a href="https://github.com/ebryn/backburner.js"&gt;Backburner.js&lt;/a&gt; microlibrary,
which Ember now uses.&lt;/p&gt;

&lt;p&gt;This will allow other frameworks and libraries that use
Backburner to benefit from using a deferred event queue, and hopefully
we can share our work to make the web platform faster for everyone.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_handlebars-rc4-compatibility'&gt;Handlebars RC4 Compatibility&lt;/h4&gt;
&lt;p&gt;Ember.js RC4 requires the latest release of Handlebars, which is also at RC4.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_improved-route-redirection'&gt;Improved Route Redirection&lt;/h4&gt;
&lt;p&gt;Routes provide a &lt;code&gt;redirect&lt;/code&gt; hook that allow them to conditionally redirect to
a different route. For example, you may redirect the user to a login
route if you detect that they do not have an authentication token saved.&lt;/p&gt;

&lt;p&gt;Many improvements to the &lt;code&gt;redirect&lt;/code&gt; hook have been made to make it more
reliable. Additionally, you can now implement this hook in the
&lt;code&gt;ApplicationRoute&lt;/code&gt;, which previously would not work.&lt;/p&gt;

&lt;p&gt;Props to Tom Dale for this work.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-testing-improvements'&gt;ember-testing Improvements&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ember-testing&lt;/code&gt; package, included in Ember.js, is the
officially-supported library for writing unit and integration tests for
Ember apps. Introduced in RC3, this has continued to be improved, with
many bug fixes and performance improvements landing in RC4.&lt;/p&gt;

&lt;p&gt;A huge thanks to Teddy Zeeny for driving many of these improvements.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-disabledwhen-code-linkto-option'&gt;&lt;code&gt;disabledWhen&lt;/code&gt; {{linkTo}} Option&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{#linkTo}}&lt;/code&gt; Handlebars helper now has a &lt;code&gt;disabledWhen&lt;/code&gt; option that
can be bound to conditionally disable a link:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt; &lt;span class="error"&gt;'&lt;/span&gt;&lt;span class="attribute-name"&gt;upgradeAccount&lt;/span&gt;&lt;span class="error"&gt;'&lt;/span&gt; &lt;span class="attribute-name"&gt;disabledWhen&lt;/span&gt;=&lt;span class="attribute-value"&gt;isPremiumUser&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;Upgrade
Account&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;linkTo&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to Trek Glowacki for this improvement.&lt;/p&gt;
</content>
  </entry>
</feed>
