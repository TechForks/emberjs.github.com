<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2014-03-04T00:00:00Z</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Core Team Meeting Minutes - 2014/02/28</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/03/04/core-team-meeting-minutes-2014-02-28.html"/>
    <id>http://emberjs.com/blog/2014/03/04/core-team-meeting-minutes-2014-02-28.html</id>
    <published>2014-03-04T00:00:00Z</published>
    <updated>2014-03-04T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @rwjblue, @stefanpenner, @tomdale, @trek, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_hello-ghost'&gt;Hello, Ghost&lt;/h4&gt;
&lt;p&gt;A few weeks ago &lt;a href="https://twitter.com/jacob4u2/status/434059022220541952"&gt;@jacob4u2 reached out over twitter&lt;/a&gt;
to let us know the popular Node.js-based blogging platform &lt;a href="https://ghost.org/"&gt;Ghost&lt;/a&gt; was looking to
reinvent their admin interface and were discussing various browser JavaScript libraries. The
&lt;a href="https://github.com/TryGhost/Ghost/issues/2144"&gt;ensuing discussion&lt;/a&gt; is a great read.&lt;/p&gt;

&lt;p&gt;This week the Ghost team announced &lt;a href="http://dev.ghost.org/hello-ember/"&gt;they&amp;#39;d be rebuilding in Ember.js&lt;/a&gt;.
We&amp;#39;re super geeked to see Ghost join &lt;a href="https://www.balancedpayments.com/"&gt;Balanced&lt;/a&gt;,
&lt;a href="https://travis-ci.org/"&gt;TravisCI&lt;/a&gt;, &lt;a href="http://www.discourse.org/"&gt;Discourse&lt;/a&gt;, and the rest of the
great community of open source projects adopting Ember.js.&lt;/p&gt;

&lt;p&gt;Thanks to everyone who chimed in on the discussion and the Ember.js community members who
helped with advice, feedback, and tender loving care on Github, Twitter, and IRC.&lt;/p&gt;

&lt;p&gt;Resolution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@ebryn is going to do a video walkthrough of how he&amp;#39;d organize Ghost&amp;#39;s admin interface&lt;/li&gt;
&lt;li&gt;@rwjblue and @trek have been in #Ghost IRC and will keep that up&lt;/li&gt;
&lt;li&gt;We&amp;#39;ll ask the Ghost to team to draw our attention to PRs/Issues related to the migration&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_es6ifying-core'&gt;ES6ifying core&lt;/h4&gt;
&lt;p&gt;The migration of ember-metal, ember-runtime, and ember-debug to ES6-style modules is
&lt;a href="https://github.com/emberjs/ember.js/pull/4374"&gt;completed but not yet merged&lt;/a&gt;.  In making
large changes we&amp;#39;re always especially cautious about accidentally breaking existing
features, reducing performance, or increasing file size. Modularizing doesn&amp;#39;t appear to have
an effect on build speed or runtime performance, but did lead to a 5k min/gzip size increase
that we&amp;#39;re not happy with.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re currently tracking down the various causes of size bloat and doing some cleanup
to bring build size back to its previous size.&lt;/p&gt;

&lt;p&gt;Resolution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@rwjblue is going to do some cleanup and work with the transpiler
maintainers to add some output improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_features-pending-go-decision'&gt;Features pending &amp;#39;Go&amp;#39; decision.&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for future inclusion in
the 1.6.x beta series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;
Still blocked on module vs global object lookup form, which causes naming collisions.&lt;/p&gt;

&lt;p&gt;Resolution: will remain on canary until we&amp;#39;ve moved to modules and have a modular
loader.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-caps-lookup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;#3218&lt;/a&gt;
The original author has become unresponsive.&lt;/p&gt;

&lt;p&gt;Resolution: approach @mixonic to take over.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-add-model-option&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4293"&gt;#4293&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: It’s a go.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_pr-s-issues-to-review'&gt;PR&amp;#39;s/Issues To Review&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4436"&gt;Do not setup listeners for destroyed Arrays&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes due to timing in test suites, an array that has become
destroyed (most likely due to a call to DS.Store#unloadAll in Ember Data)
is assigned to an array proxy. This leads to an intermittent problem
where an assertion is raised due to a destroyed array-like object
no longer being considered an array by Ember.&lt;/p&gt;

&lt;p&gt;The root cause is that Ember.isArray relies on Ember.Array.detect to
determine &amp;quot;Array-ness&amp;quot;, and when Ember.Array.detect is used on a
destroyed object false is returned because the meta information has
been removed.&lt;/p&gt;

&lt;p&gt;Resolution: this error is the symptom, needs further investigation.
@stefanpenner will investigate, and consult @krisselden and @ebryn&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4401"&gt;Resolve target issue on actions and with-controller&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fixes issues where actions inside a {{with controller=&amp;#39;foo&amp;#39;}}
block bypass the &lt;code&gt;FooController&lt;/code&gt;&amp;#39;s action handling.&lt;/p&gt;

&lt;p&gt;Resolution: @ebryn, @krisselden, @wycats should review. Future changes that touch
scope manipulation must be reviewed by @ebryn, @krisselden,  @wycats.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4404"&gt;The &lt;code&gt;each&lt;/code&gt; helper checks that the metamorph tags have the same parent.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In some cases, the browser may add or fix tags, which change the
parentage of metamorph tags. This problem happens frequently when the
developer doesn&amp;#39;t not include the TBODY tag inside a table for example.
This prevents the framework to update or clean the underlying DOM
elements.&lt;/p&gt;

&lt;p&gt;This helps to detect the issue described in #4273.&lt;/p&gt;

&lt;p&gt;Resolution: @trek will offer some feedback on wording. This should be a total non-issue
once we can emit HTMLBars.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4097"&gt;Expose asObject to Ember.Handlebars.precompile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: This belongs in handlebars, so reopen on Handlebars repo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4352"&gt;FEATURE ember-handlebars-radio-buttons Implement radio buttons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: hold off and talk about this at the next face to face.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4124"&gt;Deprecate edge-case get and normalizeTuple behavior before fixes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PR &lt;a href="https://github.com/emberjs/ember.js/pull/3852"&gt;#3852&lt;/a&gt; changes some edge case behavior for get and normalizeTuple. Ahead of those changes, this commit introduces deprecation notices.&lt;/p&gt;

&lt;p&gt;Resolution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deprecate get for local paths on global contexts, only if they
return data.&lt;/li&gt;
&lt;li&gt;Deprecate normalizeTuple calls that return a non-global context
and a simple global path.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/02/21</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/23/core-team-meeting-minutes-2014-02-21.html"/>
    <id>http://emberjs.com/blog/2014/02/23/core-team-meeting-minutes-2014-02-21.html</id>
    <published>2014-02-23T00:00:00Z</published>
    <updated>2014-02-23T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @tomdale, @trek, @wagenet, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_old-stack-overflow-questions'&gt;Old Stack Overflow questions&lt;/h4&gt;
&lt;p&gt;Last week we started the process of cleaning up old questions on Stack Overflow by
collecting a list of questions and evaluating whether the question still made
sense and, if so, whether selected answer was still the best available answer.&lt;/p&gt;

&lt;p&gt;Initially we were using Stack Overflow&amp;#39;s existing tagging functionality to collect this
list but the Stack Overflow admins &lt;a href="http://meta.stackoverflow.com/a/221612/238614"&gt;suggested that we find some other way&lt;/a&gt;.
They didn&amp;#39;t have any suggestions for using Stack Overflow to speed this process,
so we created a list of all Ember.js questions to date with some minimal semantics
around correctness.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re looking to help, please &lt;a href="https://docs.google.com/spreadsheet/ccc?key=0Aie5my_LJZzOdFB3SnAtZHFZcENic3hrMmxHdWkzeXc&amp;amp;usp=drive_web#gid=0"&gt;check out this document&lt;/a&gt;
and give us feedback on some older Stack Overflow questions and answers!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_es6ifying-core'&gt;ES6ifying core&lt;/h4&gt;
&lt;p&gt;This work continues &lt;a href="https://github.com/emberjs/ember.js/pull/4374"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_features-pending-go-decision'&gt;Features pending &amp;#39;Go&amp;#39; decision.&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for future inclusion in
the 1.6.x beta series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While its heart is in the right place, we think this is a bandaid on top of a
testing infrastructure that needs a bottoms-up rethink.&lt;/p&gt;

&lt;p&gt;While we don&amp;#39;t think the implementation needs to change dramatically, per se,
someone needs to sit down and write a proposal for how the testing infrastructure
should work.&lt;/p&gt;

&lt;p&gt;Resolution: Revert.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@stefanpenner and @machty met in person on Tuesday to discuss an API that supported
lazy loading of routes and will continue the conversation as these changes are made.&lt;/p&gt;

&lt;p&gt;Resolution: Not ready just yet. We don’t  want to serialize default values into the
URL. False params should be represented as “=false”, rather than merely being absent
from URL (which was ambiguous). So, this example JSBin from the docs is wrong:
http://emberjs.jsbin.com/ucanam/2708.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/02/14</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/15/core-team-meeting-minutes-2014-02-14.html"/>
    <id>http://emberjs.com/blog/2014/02/15/core-team-meeting-minutes-2014-02-14.html</id>
    <published>2014-02-15T00:00:00Z</published>
    <updated>2014-02-15T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @trek, @wagenet, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_es6ifying-core'&gt;ES6ifying core&lt;/h4&gt;
&lt;p&gt;Last month we completed the migration of &lt;a href="https://github.com/emberjs"&gt;ember-data&lt;/a&gt; to the ES6 module syntax. This lets us use &lt;a href="https://github.com/emberjs/data/blob/master/packages/ember-data/lib/serializers/rest_serializer.js#L5-L8"&gt;clearer dependency declarations&lt;/a&gt;, stay clear of module syntax battles (you can export to whichever module format best conforms to your deeply held beliefs on JavaScript modules), and continues our pattern of bringing future JavaScript features to you today.&lt;/p&gt;

&lt;p&gt;Work has started on the &lt;a href="https://github.com/emberjs/ember.js/commit/8c0a52cb10efbaede8e14cca24fa5c05bcf121ff"&gt;porting Ember.js to ES6 module syntax as well!&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to @thomasABoyt and @Square for work on the &lt;a href="https://github.com/square/es6-module-transpiler"&gt;ES6 Module Transpiler&lt;/a&gt;, @fivetanley for converting ember-data, and @rjackson for starting the process in Ember.js core.&lt;/p&gt;

&lt;p&gt;Resolution: @rjackson hands off the grunt work to @trek and @fivetanley so he&amp;#39;s not overextended. @rjackson says &amp;quot;you&amp;#39;re good to start with ember-metal&amp;quot;&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ghost-js-admin'&gt;Ghost.js Admin&lt;/h4&gt;
&lt;p&gt;The fine folks at &lt;a href="https://ghost.org/"&gt;Ghost&lt;/a&gt; have hit a complexity ceiling with their current admin interface (a mixed client/server rendering solution with Backbone tossed in). They&amp;#39;re &lt;a href="https://github.com/TryGhost/Ghost/issues/2144"&gt;discussing various solutions for a rewrite&lt;/a&gt; and Ember.js is among the options.&lt;/p&gt;

&lt;p&gt;The core team discussed devoting some time to helping the Ghost team evaluate Ember.js as a possible solution.
If you&amp;#39;d like to help or weigh in – especially if you&amp;#39;re a current Ghost user or developer – please go comment: &lt;a href="https://github.com/TryGhost/Ghost/issues/2144"&gt;https://github.com/TryGhost/Ghost/issues/2144&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: @trek will devote some time to helping the Ghost team. Possibly on a small spike.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_getting-rid-of-old-stack-overflow-questions-answers'&gt;Getting rid of old Stack Overflow questions/answers&lt;/h4&gt;
&lt;p&gt;We frequently get comments about older Stack Overflow questions and answers. Answers
related to pre-release versions of Ember have a high likelihood of no longer being valid.
Stack Overflow has a policy of not deleting questions related to older versions of software,
but we think pre-release software is exceptional for a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pre-release software is often undocumented and unfinished, leading people to use
Stack Overflow as a place to find answers at higher rates than for relased software&lt;/li&gt;
&lt;li&gt;people should not continue using pre-release software for long after an official
release, so there is little value in having those answers around for future reference&lt;/li&gt;
&lt;li&gt;good questions might have wildly different answers before and after a 1.0 release
but there&amp;#39;s no way for a new user to know&lt;/li&gt;
&lt;li&gt;some questions themselves will no longer make sense as features are added or removed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of a question that should be deleted is this &lt;a href="http://stackoverflow.com/questions/8672287/ember-js-how-to-use-em-button"&gt;question related to Ember.Button&lt;/a&gt;. Ember.Button has long been deprecated and removed. The pattern for actions has changed significantly since that question was asked in December 2011. However, someone wondering how to handle buttons in Ember who searches for &amp;quot;ember and buttons stackoverflow&amp;quot; will get this question as a top result.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re working to do some form of cleanup for questions like these. The first step is to compile a list of ones the community feels should be removed. With that list we&amp;#39;ll apply some form of cleanup.&lt;/p&gt;

&lt;p&gt;Resolution: @trek will get this list created somehow.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_features-pending-go-decision'&gt;Features pending &amp;#39;Go&amp;#39; decision.&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for future inclusion in the 1.6.x beta series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@stefanpenner and @tomdale still need to pow-wow on this.&lt;/p&gt;

&lt;p&gt;Resolution: @stefanpenner and @tomdale will speak.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@stefanpenner and @tomdale still need to pow-wow on this.&lt;/p&gt;

&lt;p&gt;Resolution: @stefanpenner and @tomdale will speak.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@wycats and @machty continued discussion on lazy loading. Goal is to get it in during this beta cycle&lt;/p&gt;

&lt;p&gt;Resolution: @machty &amp;amp; @stefanpenner have a man-date to discuss lazy loading.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;composable-computed-properties&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;#3696&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Still blocked on &lt;a href="https://github.com/emberjs/ember.js/pull/4185"&gt;computed.literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: The original behavior wasn&amp;#39;t intended. Changing now might be breaking change
in some people&amp;#39;s apps. We&amp;#39;ll put it through a multi-cycle deprecation/removal path.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-metal-computed-empty-array&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4219"&gt;#4219&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: &amp;quot;Go&amp;quot;. Upgrade to a Bugfix is it doesn&amp;#39;t require a flag.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-runtime-test-friendly-promises&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4176"&gt;#4176&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: Peter will try in &lt;a href="https://www.skylight.io/"&gt;Skylight&lt;/a&gt;&amp;#39;s tests and
offer feedback&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-inherits-parent-model&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4246"&gt;#4246&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolution: Already conceptually a &amp;quot;Go&amp;quot;. @machty will make nestable routes in the next week or so so this can be merged.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4235"&gt;BUGFIX beta Still update HTML5 history if the previous state was null&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iframes may set null values onto the HTML5 history state. The router will sometimes pick up the null value as current
instead of the window&amp;#39;s nominal state (which was set by Ember). The old logic required that a prior state be present, 
this logic allows a null state to be replaced or pushed over.&lt;/p&gt;

&lt;p&gt;Resolution: A clear &amp;quot;Go&amp;quot;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ember 1.4.0 and 1.5 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html"/>
    <id>http://emberjs.com/blog/2014/02/12/ember-1-4-0-and-ember-1-5-0-beta-released.html</id>
    <published>2014-02-12T00:00:00Z</published>
    <updated>2014-02-12T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.4.0 and the first beta in the 1.5 series
have just been released. This comes as the fourth cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class="anchorable-toc" id="toc_new-features-in-1-4"&gt;New features in 1.4&lt;/h3&gt;&lt;h4 class="anchorable-toc" id="toc_property-brace-expansion"&gt;Property Brace...&lt;/h4&gt;</summary>
    <content type="html">&lt;p&gt;We are pleased to announce that both Ember.js 1.4.0 and the first beta in the 1.5 series
have just been released. This comes as the fourth cycle of our six-week release
process that began just after 1.0 was released.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_new-features-in-1-4'&gt;New features in 1.4&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_property-brace-expansion'&gt;Property Brace Expansion&lt;/h4&gt;
&lt;p&gt;In prior versions of Ember if you wanted to observe both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; on &lt;code&gt;baz&lt;/code&gt;
you would need to setup both &lt;code&gt;baz.foo&lt;/code&gt; and &lt;code&gt;baz.bar&lt;/code&gt; as dependent keys.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; obj = Ember.Object.extend({
  &lt;span class="key"&gt;baz&lt;/span&gt;: {&lt;span class="key"&gt;foo&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAMMO&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;bar&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;BLAZORZ&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;},

  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the new property brace expansion, you could setup the computed properties dependencies
instead like:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;  &lt;span class="function"&gt;something&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(){
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) + &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt; &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; + &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.bar&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz.{foo,bar}&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This allows much less duplication/redundancy when your dependent keys are mostly similar.&lt;/p&gt;

&lt;p&gt;See the original PR &lt;a href="https://github.com/emberjs/ember.js/pull/3538"&gt;#3538&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-run-bind'&gt;Ember.run.bind&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ember.run.bind&lt;/code&gt; provides a useful utility when integrating with non-Ember libraries
that provide asynchronous callbacks.&lt;/p&gt;

&lt;p&gt;Ember utilizes a run-loop to batch and coalesce changes. This works by
marking the start and end of Ember-related JavaScript execution.&lt;/p&gt;

&lt;p&gt;When using events such as a View&amp;#39;s click handler, Ember wraps the event
handler in a run-loop, but when integrating with non-Ember libraries this
can be tedious.&lt;/p&gt;

&lt;p&gt;For example, the following is rather verbose but is the correct way to combine
third-party events and Ember code.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; that = &lt;span class="local-variable"&gt;this&lt;/span&gt;;
jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="keyword"&gt;function&lt;/span&gt;(){
  Ember.run(&lt;span class="keyword"&gt;function&lt;/span&gt;(){
    that.handleResize();
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To reduce the boilerplate, the following can be used to construct a
run-loop-wrapped callback handler.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;jQuery(window).on(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;resize&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, Ember.run.bind(&lt;span class="local-variable"&gt;this&lt;/span&gt;, &lt;span class="local-variable"&gt;this&lt;/span&gt;.handleResize));
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more details please reference the recently added &lt;a href="/guides/understanding-ember/run-loop/"&gt;run-loop guide&lt;/a&gt;
(much thanks to &lt;a href="https://github.com/bfbriggs"&gt;Brendan Briggs&lt;/a&gt;).&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_with-controller'&gt;With Controller&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{with}}&lt;/code&gt; helper can now accept a &lt;code&gt;controller&lt;/code&gt; option. Adding &lt;code&gt;controller=&amp;#39;something&amp;#39;&lt;/code&gt;
instructs the &lt;code&gt;{{with}}&lt;/code&gt; helper to create and use an instance of the specified controller
with the new context as its content.&lt;/p&gt;

&lt;p&gt;This is very similar to using the &lt;code&gt;itemController&lt;/code&gt; option with the &lt;code&gt;{{each}}&lt;/code&gt; helper.&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt; &lt;span class="attribute-name"&gt;users.posts&lt;/span&gt; &lt;span class="attribute-name"&gt;controller&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;userBlogPosts&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  &lt;span class="comment"&gt;{{!- The current context is wrapped in our controller instance }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the above example, the template provided to the &lt;code&gt;{{with}}&lt;/code&gt; block is now wrapped in the
&lt;code&gt;userBlogPost&lt;/code&gt; controller, which provides a very elegant way to decorate the context with custom
functions/properties.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_lazily-bound-attributes'&gt;Lazily Bound Attributes&lt;/h4&gt;
&lt;p&gt;Previously, every attribute that was bound added some degree of cost (mostly associated with maintaining
the bindings/observers themselves). This lead us to limit the list of attributes that were automatically
bound for &lt;code&gt;Ember.TextField&lt;/code&gt;, &lt;code&gt;Ember.TextArea&lt;/code&gt;, and friends. This is a common source of frustration as
more and more people want to bind to HTML5 attributes, but find that to do so they must reopen the
&lt;code&gt;Ember.TextField&lt;/code&gt; class and add the attributes they need.&lt;/p&gt;

&lt;p&gt;This might look like:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.TextField.reopen({
  &lt;span class="key"&gt;attributeBindings&lt;/span&gt;: [&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;autofocus&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;]
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then from the template:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;input&lt;/span&gt; &lt;span class="attribute-name"&gt;autofocus&lt;/span&gt;=&lt;span class="attribute-value"&gt;omgAutofocusMe&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This certainly is not ideal, and causes many issues for people that expect it to &amp;quot;just work&amp;quot;.&lt;/p&gt;

&lt;p&gt;Thankfully, this has gotten MUCH better with the 1.4 release. In 1.4 any attribute bindings that do not
exist at the time the view is first rendered will not have observers setup (therefore removing the original
performance concern), but if/when the attribute is set on the view later (after the first render) an observer
is setup at that time.&lt;/p&gt;

&lt;p&gt;This means that we are only creating observers for actual properties that are present, but we can list every
valid HTML attribute in the &lt;code&gt;attributeBindings&lt;/code&gt; property so that you can simply use them without having to reopen
internal classes.&lt;/p&gt;

&lt;p&gt;As of Ember 1.4 you should be able to use any HTML5 attribute with &lt;code&gt;{{input type=&amp;quot;text&amp;quot;}}&lt;/code&gt;, &lt;code&gt;{{textarea}}&lt;/code&gt;, and
&lt;code&gt;{{checkbox}}&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-improvements'&gt;Other Improvements&lt;/h4&gt;
&lt;p&gt;As usual, there are a ton of bug fixes and small improvements in this
release. You can see a list of all the changes in the CHANGELOG:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.4.0/CHANGELOG.md"&gt;Ember.js 1.4.0 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js/blob/v1.5.0-beta.1/CHANGELOG.md"&gt;Ember.js 1.5.0-beta.1 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/02/07</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-02-07.html"/>
    <id>http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-02-07.html</id>
    <published>2014-02-08T00:00:00Z</published>
    <updated>2014-02-08T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC 
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every 
Friday at 2pm EST/11am PST through Google Hangout for a weekly 
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @trek, @wagenet, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_topics'&gt;Topics&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_features-pending-go-decision'&gt;Features pending &amp;#39;Go&amp;#39; decision.&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for inclusion in the 1.5.x beta series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tom and Stef still need to discuss how to handle module mode + new semantics next week.&lt;/p&gt;

&lt;p&gt;Resolution: Tom and Stef will discuss this week. No, for real this time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-caps-lookup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;#3218&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Needs follow up from &lt;a href="https://github.com/xtian"&gt;@xtian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Resolution: Ping @xtian&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tom and Stef still need to review.&lt;/p&gt;

&lt;p&gt;Resolution: Tom and Stef will review.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are still some decisions around &lt;a href="https://code.stypi.com/stefanpenner/lazy-loading"&gt;lazy loading code&lt;/a&gt;
and query params.&lt;/p&gt;

&lt;p&gt;resolution: Alex and Stef will discuss lazy stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;composable-computed-properties&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;#3696&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution:  stefan will work with David monday or tuesday to get this in. A &amp;quot;Go&amp;quot; then.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-inherits-parent-model&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4246"&gt;#4246&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;, already in beta&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-log-primitives&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4252"&gt;#4252&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-document-title&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3689"&gt;#3689&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Examples from @machty of current behavior:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3299"&gt;Single static title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3302"&gt;Basic example of titleToken + title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3300"&gt;Basic example of titleToken + title (reversed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3303"&gt;titleToken bound to controller/model properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3304"&gt;Overriding doc.title format in deeper routes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: Still &amp;quot;No go&amp;quot;, tokenization needs some polish related to nested resources&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_features-currently-slated-for-1-5-0-beta-series'&gt;Features currently slated for 1.5.0 beta series&lt;/h4&gt;
&lt;p&gt;The core team reviewed the following pull requests for already enabled in canary builds for inclusion in the 1.5.x beta series. All still have a &amp;quot;Go&amp;quot; vote.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ember-testing-routing-helpers&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3711"&gt;#3711&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-testing-triggerEvent-helper&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3792"&gt;#3792&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;computed-read-only&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3879"&gt;#3879&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-metal-is-blank&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4049"&gt;#4049&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-eager-url-update&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4122"&gt;#4122&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-routing-auto-location&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3725"&gt;#3725&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember-routing-bound-action-name&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3936"&gt;#3936&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class='anchorable-toc' id='toc_feature-process'&gt;Feature Process&lt;/h4&gt;
&lt;p&gt;We reviewed the a proposed change to the process for adding features. This isn&amp;#39;t a major departure, just an iteration
on what we are currently doing:&lt;/p&gt;

&lt;p&gt;Process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feature is submitted via PR.

&lt;ul&gt;
&lt;li&gt;Confirm &lt;code&gt;features.json&lt;/code&gt; and &lt;code&gt;FEATURES.md&lt;/code&gt; have entries.&lt;/li&gt;
&lt;li&gt;That PR is reviewed, and generally confirmed to be a solid idea&lt;/li&gt;
&lt;li&gt;PR is merged so makes it into a canary build&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Feature is added to &lt;a href="https://github.com/emberjs/ember.js/issues/4052"&gt;Features Pending &amp;#39;Go&amp;#39; Decision&lt;/a&gt; Issue&lt;/li&gt;
&lt;li&gt;New Issue is created with a check-list of items to be completed prior to receiving a &amp;#39;Go&amp;#39; vote. 
This should include at least the following entries:

&lt;ul&gt;
&lt;li&gt;Security Audit&lt;/li&gt;
&lt;li&gt;Core Team Sign-off&lt;/li&gt;
&lt;li&gt;Should be given a special tag (to make it easy to find later)&lt;/li&gt;
&lt;li&gt;Should be assigned to the original feature contributor&lt;/li&gt;
&lt;li&gt;This can serve as the proper place to ask for changes/fixes to the feature&lt;/li&gt;
&lt;li&gt;Once the feature has gotten a &amp;#39;Go&amp;#39; decision&lt;/li&gt;
&lt;li&gt;The issue is closed.&lt;/li&gt;
&lt;li&gt;It is added to &lt;code&gt;features.json&lt;/code&gt; with a value of &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot; and CONTRIBUTOR.md should be update accordingly.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_security-process'&gt;Security Process&lt;/h4&gt;
&lt;p&gt;Currently we do security releases all the way back to 1.0.x. At some point that will be untenable (not yet though).
There was some discussions about Long Term Support release structures: every odd/even becomes LTS, or even 5th release, or we only support previous three revisions (which would be all releases in the last 4.5 months with our current release model).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Core Team Meeting Minutes - 2014/01/31</title>
    <link rel="alternate" href="http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-31.html"/>
    <id>http://emberjs.com/blog/2014/02/08/core-team-meeting-minutes-2014-01-31.html</id>
    <published>2014-02-08T00:00:00Z</published>
    <updated>2014-02-08T00:00:00Z</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Although most of our collaboration takes place on Github, IRC
(&lt;code&gt;#emberjs&lt;/code&gt; on freenode.net), and our &lt;a href="http://discuss.emberjs.com/"&gt;Discourse site&lt;/a&gt;
the &lt;a href="/team"&gt;Ember.js Core Team&lt;/a&gt; meets privately every
Friday at 2pm EST/11am PST through Google Hangout for a weekly
discussion of all things Ember.&lt;/p&gt;

&lt;p&gt;If you have a topic you&amp;#39;d like to see covered, contact your favorite
core team member and let them know!&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_attendees'&gt;Attendees&lt;/h4&gt;
&lt;p&gt;@ebryn, @krisselden, @machty, @stefanpenner, @tomdale, @wifelette, @wycats&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_go-no-go-feature-listing'&gt;Go/No-Go Feature Listing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-named-substates&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3655"&gt;#3655&lt;/a&gt;
  @krisselden: likes the feature a lot (we should “just doit”)
  @wycats: naming with globals is totally unsolvable.
  @machty: If FooLoading is ambiguous, we should just warn that global mode is not supported for this feature
  @tomdale: we need a separate task force for thinking about module mode only features.&lt;/p&gt;

&lt;p&gt;resolution: Tom and Stef will review&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-handlebars-caps-lookup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3218"&gt;#3218&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: check local first, warn and fallback to global seems like a good strategy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-testing-simple-setup&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3785"&gt;#3785&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: Tom and Stef will review&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;version api docs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Often asked for. We should work with community, see if robert can own, and help delegate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;query-params-new&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/4008"&gt;#4008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;misleading bug reports, but eager loader of controllers was the original pain point that kept
this a &amp;quot;No go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;composable-computed-properties&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3696"&gt;#3696&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@wycats: aliased to short words in the examples, should be documented to match this?
@ebryn:: new CP work may have issues, @wycats and @ebryn and David should talk.&lt;/p&gt;

&lt;p&gt;resolution: @ebryn will talk to David about blocking&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-auto-location&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3725"&gt;#3725&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: Alex will make sure docs are good, then this becomes a &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ember-routing-bound-action-name&lt;/code&gt; &lt;a href="https://github.com/emberjs/ember.js/pull/3936"&gt;#3936&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot; but we need an intermediate release issuing deprecation warnings, a future release will have break. This future release may contain some helpful warning, and the release notes will contain this info.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class='anchorable-toc' id='toc_pr-s-issues-to-review'&gt;PR&amp;#39;s/Issues To Review&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4251"&gt;FEATURE ember-routing-consistent-resources&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adds &lt;code&gt;.index&lt;/code&gt;, &lt;code&gt;.loading&lt;/code&gt;, and &lt;code&gt;.error&lt;/code&gt; sub-routes for resources created even if no callback was provided.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt; App.Router.map(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
   &lt;span class="local-variable"&gt;this&lt;/span&gt;.resource(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;home&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
 });
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Prior to this feature &lt;code&gt;home.index&lt;/code&gt; route would not be created for the above resource.
It is possible that the current situation was intentional.&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;No go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/4246"&gt;FEATURE ember-routing-inherits-parent-model&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.Router.map(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
  &lt;span class="local-variable"&gt;this&lt;/span&gt;.resource(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;thing&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="key"&gt;path&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;/thing/:thing_id&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="local-variable"&gt;this&lt;/span&gt;.route(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;edit&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you wanted the Edit route&amp;#39;s model to be the Thing loaded in the Thing route, you have to define a model hook on the Edit route to call this.modelFor(&amp;#39;thing&amp;#39;), which is pretty repetitive and cumbersome.&lt;/p&gt;

&lt;p&gt;For this.route() routes that don&amp;#39;t specify a model hook, the model for that route should default to the parent resource&amp;#39;s model.&lt;/p&gt;

&lt;p&gt;This should be totally backwards compatible unless someone is doing something extremely strange.&lt;/p&gt;

&lt;p&gt;resolution: make this work only for routes, not resources for now. The interim solution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3689"&gt;FEATURE ember-document-title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Examples from @machty:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3299"&gt;Single static title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3302"&gt;Basic example of titleToken + title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3300"&gt;Basic example of titleToken + title (reversed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3303"&gt;titleToken bound to controller/model properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsbin.com/ucanam/3304"&gt;Overriding doc.title format in deeper routes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resolution: pause, until @wycats and @tomdale can review tokens behavior. Its getting close and we want this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3935"&gt;Convert Checkbox and Select to Components.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;No go&amp;quot;, this is a breaking change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/ember.js/pull/3838"&gt;Use &lt;code&gt;QUnit.module&lt;/code&gt; instead of &lt;code&gt;module&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s just confirm what to use as a prefix. Is &lt;code&gt;QUnit.module&lt;/code&gt; OK, or should we create our own
(perhaps &lt;code&gt;EmberDev.module&lt;/code&gt; or something)?&lt;/p&gt;

&lt;p&gt;resolution: &amp;quot;Go&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
